name: Deploy to EC2 via SSH

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # shallow clone; remote reset handles sync

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add EC2 host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
          DOT_ENV_CONTENT: ${{ secrets.DOT_ENV_FILE }}
        run: |
          echo "Connecting to ${USER}@${HOST}"
          echo "Deploying to ${PROJECT_PATH} on remote"

          ssh ${USER}@${HOST} << EOF
            set -e
            # Navigate to project directory
            cd ${PROJECT_PATH}
            echo "Current directory: $(pwd)"

            echo "Cleaning up old Docker dataâ€¦"
            docker system prune -af        # remove all stopped containers, unused images, build cache
            docker volume prune -f 

            # Reset local repo to match remote
            echo "Resetting code to origin/master..."
            git fetch origin master
            git reset --hard origin/master
            git clean -fd

            # Write .env file
            echo "Writing .env file..."
            printf "%s\n" "${DOT_ENV_CONTENT}" > .env
            chmod 600 .env

            # Tear down any existing services, including orphans
            echo "Stopping existing services..."
            docker-compose down --remove-orphans

            # Build and start fresh
            echo "Building and starting services..."
            docker-compose up --build -d

            echo "Deployment finished!"
          EOF
