spring.application.name=Journal-Spring

spring.docker.compose.lifecycle-management=start_only


spring.datasource.url=jdbc:postgresql://localhost:5432/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Security Configuration
security.jwt.secret-key=${JWT_SECRET}
security.jwt.expiration-time=3600000
admin.api-key=${ADMIN_KEY}

# Mail Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile,openid
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.dev.rubric.journalspring=DEBUG
logging.level.org.springframework.web=DEBUG

# Frontend URL for CORS
app.frontend.url=${FRONTEND_URL}

# Encryption Configuration
encryption.secret=${ENCRYPTION_SECRET}
encryption.salt=${ENCRYPTION_SALT}

spring.config.import=optional:file:.env[.properties]

# AWS S3
aws.s3.bucket-name=diamond-diaries-media
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretAccessKey=${AWS_SECRET_ACCESS_KEY}

